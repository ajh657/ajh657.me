@page "/Furry/FFXIV"
@layout FFXIVLayout
@inject HttpClient Http

<RadzenStack Gap="0.5em">
    <RadzenText TextStyle="TextStyle.DisplayH2">@Strings.Furry.Sections.HobbiesSubsections.FFXIVSubSection.Title</RadzenText>

        <RadzenCard class="rz-shadow-0 ajh-secondary-background">
            <p>@Strings.Furry.Sections.HobbiesSubsections.FFXIVSubSection.Greeting</p>
    </RadzenCard>

    @if (Links != null)
    {
        <LinkCollectionList Links="@Links" Title="@Strings.Furry.Sections.HobbiesSubsections.FFXIVSubSection.LinkListTitle" />
    }
    else
    {
        <RadzenCard>
            <p>No Stories found</p>
        </RadzenCard>
    }
</RadzenStack>

@code {

    public List<Link>? Links { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        try
        {
            var endpoint = "ListStories";

#if DEBUG
            endpoint = "api/ListStories";
#endif

            var stories = await Http.GetFromJsonAsync<IEnumerable<Story>>(endpoint);

            if (stories != null)
            {
                Links = stories.Select(x => new Link
                    {
                        IconClass = "fa-solid fa-book",
                        Name = x.Title,
                        URL = x.StorageUrl
                    }).ToList();
            }

        }
        catch (Exception e)
        {

        }

    }
}